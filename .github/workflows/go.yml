name: Go

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: write

jobs:
  build:
    if: github.event_name != 'pull_request' || (github.event_name == 'pull_request' && !github.event.pull_request.draft)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ['1.19', '1.20', '1.21', '1.22']
        os: [ 'linux', 'windows', 'darwin' ]
        arch: [ 'amd64', 'arm64' ]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go }}

    - name: Build
      env:
        GOOS: ${{ matrix.os }}
        GOARCH: ${{ matrix.arch }}
      run: go build -v ./...

  test:
    runs-on: ubuntu-latest
    if: matrix.go == '1.22' && matrix.os == 'linux' && matrix.arch == 'amd64'
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.22

    - name: Test
      run: go test -v ./...
